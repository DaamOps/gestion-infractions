{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let InfractionService = /*#__PURE__*/(() => {\n  class InfractionService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'http://localhost:8080/api/v1/gestion-infractions/';\n      this.routePrefix = 'infractions';\n    }\n\n    findAll(params) {\n      return this.http.get(this.getRoutePrefixWithSlash() + \"all\", {\n        params\n      });\n    }\n\n    findOneById(id) {\n      return this.http.get(this.getRoutePrefixWithSlash() + id);\n    }\n\n    findAllByUserId(id) {\n      return this.http.get(this.getRoutePrefixWithSlash() + \"list/\" + id);\n    }\n\n    create(infraction) {\n      return this.http.post(this.getRoutePrefixWithSlash() + \"add\", infraction);\n    }\n\n    settle(id) {\n      return this.http.put(this.getRoutePrefixWithSlash() + \"regler/\" + id, {\n        \"settle\": true\n      });\n    }\n\n    annuler(id) {\n      return this.http.put(this.getRoutePrefixWithSlash() + \"annuler/\" + id, {\n        \"annule\": true\n      });\n    }\n\n    getRoutePrefixWithSlash() {\n      return this.url + this.routePrefix + '/';\n    }\n\n  }\n\n  InfractionService.ɵfac = function InfractionService_Factory(t) {\n    return new (t || InfractionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  InfractionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InfractionService,\n    factory: InfractionService.ɵfac,\n    providedIn: 'root'\n  });\n  return InfractionService;\n})();","map":null,"metadata":{},"sourceType":"module"}